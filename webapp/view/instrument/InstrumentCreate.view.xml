<!DOCTYPE xml>
<mvc:View
	controllerName="trading-cockpit-frontend.controller.instrument.InstrumentCreate"
	displayBlock="true"
	xmlns="sap.m"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:f="sap.ui.layout.form"
	xmlns:core="sap.ui.core">
	
	<Page title="{i18n>instrumentCreate.header}">
		<content>
			<f:Form editable="true">
				<f:layout>
					<f:ResponsiveGridLayout
						labelSpanXL="3"
						labelSpanL="3"
						labelSpanM="3"
						labelSpanS="12"
						adjustLabelSpan="false"
						emptySpanXL="2"
						emptySpanL="4"
						emptySpanM="4"
						emptySpanS="0"
						columnsXL="3"
						columnsL="2"
						columnsM="1"
						singleContainerFullSize="false" />
				</f:layout>
				
				<f:formContainers>
					<f:FormContainer title="{i18n>instrumentCreate.titleGeneralData}">
						<f:FormElement label="{i18n>instrument.type}">
							<f:fields>
								<ComboBox id="typeComboBox" selectedKey="{newInstrument>/type}" required="true" 
									selectionChange=".onTypeSelectionChange"/>
							</f:fields>
						</f:FormElement>
					
						<f:FormElement label="{i18n>instrument.symbol}">
							<f:fields>
								<Input id="symbolInput" maxLength="6" value="{newInstrument>/symbol}"/>
							</f:fields>
						</f:FormElement>
						
						<f:FormElement label="{i18n>instrument.name}">
								<f:fields>
									<Input maxLength="50" value="{newInstrument>/name}" required="false"/>
								</f:fields>
						</f:FormElement>

						<f:FormElement label="{i18n>instrument.stockExchange}">
							<f:fields>
								<ComboBox id="stockExchangeComboBox" selectedKey="{newInstrument>/stockExchange}"/>
							</f:fields>
						</f:FormElement>
					</f:FormContainer>
					
					<f:FormContainer title="{i18n>instrumentCreate.titleSectorAndIg}">
						<f:FormElement label="{i18n>instrument.type.sector}">
							<f:fields>
								<ComboBox id="sectorComboBox" items="{path: 'instruments>/instrument/'}" selectedKey="{newInstrument>/sectorId}">
									<core:Item key="{instruments>id}" text="{instruments>symbol} - {instruments>name}"/>
								</ComboBox>
							</f:fields>
						</f:FormElement>
						
						<f:FormElement label="{i18n>instrument.type.industryGroup}">
							<f:fields>
								<ComboBox id="industryGroupComboBox" items="{path: 'instruments>/instrument/'}" 
									selectedKey="{newInstrument>/industryGroupId}">
									
									<core:Item key="{instruments>id}" text="{instruments>symbol} - {instruments>name}"/>
								</ComboBox>
							</f:fields>
						</f:FormElement>
					</f:FormContainer>
					
					<f:FormContainer title="{i18n>instrumentCreate.titleRatio}">
						<f:FormElement label="{i18n>instrument.dividend}">
							<ComboBox id="dividendComboBox" items="{path: 'instruments>/instrument/'}" selectedKey="{newInstrument>/dividendId}">
								<core:Item key="{instruments>id}" text="{instruments>symbol} - {instruments>name}"/>
							</ComboBox>
						</f:FormElement>
						
						<f:FormElement label="{i18n>instrument.divisor}">
							<ComboBox id="divisorComboBox" items="{path: 'instruments>/instrument/'}" selectedKey="{newInstrument>/divisorId}">
								<core:Item key="{instruments>id}" text="{instruments>symbol} - {instruments>name}"/>
							</ComboBox>
						</f:FormElement>
					</f:FormContainer>
					
					<f:FormContainer title="{i18n>instrumentCreate.titleInterfaceDataProvider}">
						<f:FormElement label="{i18n>instrument.dataSourceList}">
							<f:fields>
								<ComboBox id="listComboBox" items="{path: 'lists>/list/'}" required="false"
									selectedKey="{newInstrument>/dataSourceListId}">
									<core:Item key="{lists>id}" text="{lists>id} - {lists>name}"/>
								</ComboBox>
							</f:fields>
						</f:FormElement>
					
						<f:FormElement label="{i18n>instrument.companyPathInvestingCom}">
							<f:fields>
								<Input id ="companyPathInput" maxLength="50" value="{newInstrument>/companyPathInvestingCom}" required="false"
									tooltip="{i18n>instrumentCreate.companyPathTooltip}"/>
							</f:fields>
						</f:FormElement>
					</f:FormContainer>
				</f:formContainers>
			</f:Form>
			
			<Button text="{i18n>button.save}" press=".onSavePressed" class="sapUiSmallMargin"/>
			<Button type="Reject" text="{i18n>button.cancel}" press=".onCancelPressed" class="sapUiSmallMargin"/>
		</content>
	</Page>
</mvc:View>