<!DOCTYPE xml>
<mvc:View
	controllerName="trading-cockpit-frontend.controller.priceAlert.PriceAlertEdit"
	displayBlock="true"
	xmlns="sap.m"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:l="sap.ui.layout"
	xmlns:f="sap.ui.layout.form"
	xmlns:core="sap.ui.core">
	
	<Page title="{i18n>priceAlertEdit.header}">
		<content>
			<l:VerticalLayout class="sapUiSmallMarginBegin">
				<Label text="{i18n>priceAlertEdit.selectionDescription}"/>
				<ComboBox id="priceAlertComboBox" items="{path: 'priceAlerts>/priceAlert/'}" selectionChange=".onPriceAlertSelectionChange">
					<core:Item key="{priceAlerts>id}" text="{priceAlerts>instrument/symbol} - {priceAlerts>price}"/>
				</ComboBox>
			</l:VerticalLayout>
			
			<f:Form id="priceAlertForm" editable="true">
				<f:title>
					<core:Title text="{i18n>priceAlertEdit.dataHeader}" />
				</f:title>
				
				<f:layout>
					<f:ResponsiveGridLayout
						labelSpanXL="3"
						labelSpanL="3"
						labelSpanM="3"
						labelSpanS="12"
						adjustLabelSpan="false"
						emptySpanXL="2"
						emptySpanL="4"
						emptySpanM="4"
						emptySpanS="0"
						columnsXL="2"
						columnsL="1"
						columnsM="1"
						singleContainerFullSize="false" />
				</f:layout>
				
				<f:formContainers>
					<f:FormContainer title="{i18n>priceAlertEdit.titleGeneralData}">
						<f:formElements>
							<f:FormElement label="{i18n>priceAlert.id}">
								<f:fields>
									<Text id="idText" text="{selectedPriceAlert>/id}"/>
								</f:fields>
							</f:FormElement>
	
							<f:FormElement label="{i18n>priceAlert.instrument}">
								<f:fields>
									<ComboBox id="instrumentComboBox" items="{path: 'instruments>/instrument/'}" 
									selectedKey="{selectedPriceAlert>/instrumentId}" required="true" selectionChange=".onInstrumentSelectionChange">
								
									<core:Item key="{instruments>id}" text="{instruments>symbol} - {instruments>name}"/>	
								</ComboBox>
								</f:fields>
							</f:FormElement>
							
							<f:FormElement label="{i18n>priceAlert.type}">
								<f:fields>
									<ComboBox id="typeComboBox" selectedKey="{selectedPriceAlert>/alertType}" required="true"/>
								</f:fields>
							</f:FormElement>
							
							<f:FormElement label="{i18n>priceAlert.price}">
								<f:fields>
									<Input id="priceInput" type="Number" required="true" 
										description="{path: 'selectedPriceAlert>/currency', formatter: '.currencyTextFormatter'}"/>
								</f:fields>
							</f:FormElement>
							
							<f:FormElement label="{i18n>priceAlert.triggerDistancePercent}">
								<f:fields>
									<Text id="triggerDistancePercentText" text="{selectedPriceAlert>/triggerDistancePercent} %"/>
								</f:fields>
							</f:FormElement>
							
							<f:FormElement label="{i18n>priceAlert.triggerTime}">
								<f:fields>
									<Text id="triggerTimeText" text="{path: 'selectedPriceAlert>/triggerTime', formatter: '.formatter.wsDateTimeFormatter'}" />
								</f:fields>
							</f:FormElement>
							
							<f:FormElement label="{i18n>priceAlert.confirmationTime}">
								<f:fields>
									<Text id="confirmationTimeText" text="{path: 'selectedPriceAlert>/confirmationTime', formatter: '.formatter.wsDateTimeFormatter'}" />
								</f:fields>
							</f:FormElement>
						</f:formElements>
					</f:FormContainer>
					
					<f:FormContainer title="{i18n>priceAlertEdit.titleMailTransmission}">
						<f:FormElement label="{i18n>priceAlert.sendMail}">
							<f:fields>
								<CheckBox id="sendMailCheckBox" selected="{selectedPriceAlert>/sendMail}"/>
							</f:fields>
						</f:FormElement>
						
						<f:FormElement label="{i18n>priceAlert.alertMailAddress}">
							<f:fields>
								<Input id="alertMailAddressInput" maxLength="254" value="{selectedPriceAlert>/alertMailAddress}" required="false"/>
							</f:fields>
						</f:FormElement>
						
						<f:FormElement label="{i18n>priceAlert.mailTransmissionTime}">
							<f:fields>
								<Text id="mailTransmissionTimeText" 
									text="{path: 'selectedPriceAlert>/mailTransmissionTime', formatter: '.formatter.wsDateTimeFormatter'}" />
							</f:fields>
						</f:FormElement>
					</f:FormContainer>
				</f:formContainers>
			</f:Form>
		</content>
		
		<Button text="{i18n>button.save}" press=".onSavePressed" class="sapUiSmallMargin" />
		<Button type="Reject" text="{i18n>button.cancel}" press=".onCancelPressed" class="sapUiSmallMargin"/>
	</Page>
</mvc:View>